# Generated by Django 5.0.14 on 2025-10-14 13:40

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import wms.models
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomerOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.CharField(max_length=50, unique=True, verbose_name='Numer zamówienia')),
                ('customer_name', models.CharField(max_length=200, verbose_name='Nazwa klienta')),
                ('customer_address', models.TextField(verbose_name='Adres dostawy')),
                ('order_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Data zamówienia')),
                ('status', models.CharField(choices=[('pending', 'Oczekujące'), ('in_progress', 'W kompletacji'), ('completed', 'Zrealizowane'), ('partially_completed', 'Częściowo zrealizowane'), ('cancelled', 'Anulowane')], default='pending', max_length=20)),
                ('total_value', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Wartość całkowita')),
                ('notes', models.TextField(blank=True, verbose_name='Uwagi')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Zamówienie klienta',
                'verbose_name_plural': 'Zamówienia klientów',
            },
        ),
        migrations.CreateModel(
            name='ProductGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nazwa grupy')),
                ('code', models.CharField(max_length=20, unique=True, verbose_name='Kod grupy')),
                ('description', models.TextField(blank=True, verbose_name='Opis')),
                ('color', models.CharField(default='#007bff', max_length=7, verbose_name='Kolor')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktywna')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Utworzono')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Zaktualizowano')),
            ],
            options={
                'verbose_name': 'Grupa produktów',
                'verbose_name_plural': 'Grupy produktów',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SupplierOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.CharField(max_length=50, unique=True)),
                ('supplier_name', models.CharField(max_length=200)),
                ('supplier_code', models.CharField(blank=True, max_length=50)),
                ('order_date', models.DateField()),
                ('expected_delivery_date', models.DateField()),
                ('actual_delivery_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Oczekujące'), ('confirmed', 'Potwierdzone'), ('in_transit', 'W transporcie'), ('received', 'Przyjęte'), ('partially_received', 'Częściowo przyjęte'), ('cancelled', 'Anulowane')], default='pending', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-order_date'],
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Nazwa lokalizacji')),
                ('location_type', models.CharField(choices=[('shelf', 'Półka'), ('rack', 'Regał'), ('zone', 'Strefa')], default='shelf', max_length=20)),
                ('barcode', models.CharField(max_length=100, unique=True, verbose_name='Kod kreskowy lokalizacji')),
                ('description', models.TextField(blank=True, verbose_name='Opis')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktywna')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='wms.location', verbose_name='Lokalizacja nadrzędna')),
            ],
            options={
                'verbose_name': 'Lokalizacja',
                'verbose_name_plural': 'Lokalizacje',
            },
        ),
        migrations.CreateModel(
            name='LocationImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=wms.models.location_image_path, verbose_name='Zdjęcie')),
                ('title', models.CharField(blank=True, max_length=200, verbose_name='Tytuł')),
                ('description', models.TextField(blank=True, verbose_name='Opis')),
                ('is_primary', models.BooleanField(default=False, verbose_name='Zdjęcie główne')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Kolejność')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Utworzono')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Zaktualizowano')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='wms.location', verbose_name='Lokalizacja')),
            ],
            options={
                'verbose_name': 'Zdjęcie lokalizacji',
                'verbose_name_plural': 'Zdjęcia lokalizacji',
                'ordering': ['location', 'is_primary', 'order', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Ilość zamówiona')),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Cena całkowita')),
                ('completed_quantity', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Ilość zrealizowana')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='wms.customerorder', verbose_name='Zamówienie')),
            ],
            options={
                'verbose_name': 'Pozycja zamówienia',
                'verbose_name_plural': 'Pozycje zamówienia',
            },
        ),
        migrations.CreateModel(
            name='PickingOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.CharField(max_length=50, unique=True, verbose_name='Numer zlecenia')),
                ('status', models.CharField(choices=[('created', 'Utworzone'), ('in_progress', 'W trakcie'), ('completed', 'Zakończone'), ('cancelled', 'Anulowane')], default='created', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('started_at', models.DateTimeField(blank=True, null=True, verbose_name='Rozpoczęto')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Zakończono')),
                ('notes', models.TextField(blank=True, verbose_name='Uwagi')),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Przypisane do')),
                ('customer_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wms.customerorder', verbose_name='Zamówienie klienta')),
            ],
            options={
                'verbose_name': 'Zlecenie kompletacji',
                'verbose_name_plural': 'Zlecenia kompletacji',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50, unique=True, verbose_name='Kod produktu')),
                ('name', models.CharField(max_length=200, verbose_name='Nazwa produktu')),
                ('description', models.TextField(blank=True, verbose_name='Opis')),
                ('unit', models.CharField(default='szt', max_length=20, verbose_name='Jednostka')),
                ('variants', models.JSONField(default={'color': '', 'size': ''}, verbose_name='Warianty produktu')),
                ('subiekt_id', models.IntegerField(blank=True, null=True, verbose_name='ID w Subiekcie/PLU')),
                ('subiekt_stock', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Stan w Subiekcie')),
                ('subiekt_stock_reserved', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Stan zarezerwowany w Subiekcie')),
                ('last_sync_date', models.DateTimeField(blank=True, null=True, verbose_name='Ostatnia synchronizacja')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='wms.product', verbose_name='Produkt nadrzędny')),
                ('groups', models.ManyToManyField(blank=True, related_name='products', to='wms.productgroup', verbose_name='Grupy produktów')),
            ],
            options={
                'verbose_name': 'Produkt',
                'verbose_name_plural': 'Produkty',
            },
        ),
        migrations.CreateModel(
            name='PickingItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_to_pick', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Ilość do pobrania')),
                ('quantity_picked', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Ilość pobrana')),
                ('is_completed', models.BooleanField(default=False, verbose_name='Zakończone')),
                ('sequence', models.IntegerField(default=0, verbose_name='Kolejność')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wms.location', verbose_name='Lokalizacja')),
                ('order_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wms.orderitem', verbose_name='Pozycja zamówienia')),
                ('picking_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='wms.pickingorder', verbose_name='Zlecenie kompletacji')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wms.product', verbose_name='Produkt')),
            ],
            options={
                'verbose_name': 'Pozycja kompletacji',
                'verbose_name_plural': 'Pozycje kompletacji',
            },
        ),
        migrations.CreateModel(
            name='PickingHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_picked', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Ilość pobrana')),
                ('scanned_at', models.DateTimeField(auto_now_add=True, verbose_name='Czas skanowania')),
                ('notes', models.TextField(blank=True, verbose_name='Uwagi')),
                ('location_scanned', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wms.location', verbose_name='Zeskanowana lokalizacja')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Użytkownik')),
                ('picking_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wms.pickingitem', verbose_name='Pozycja kompletacji')),
                ('product_scanned', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wms.product', verbose_name='Zeskanowany produkt')),
            ],
            options={
                'verbose_name': 'Historia kompletacji',
                'verbose_name_plural': 'Historia kompletacji',
            },
        ),
        migrations.AddField(
            model_name='orderitem',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wms.product', verbose_name='Produkt'),
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=wms.models.product_image_path, verbose_name='Zdjęcie')),
                ('description', models.TextField(blank=True, verbose_name='Opis')),
                ('is_primary', models.BooleanField(default=False, verbose_name='Zdjęcie główne')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Kolejność')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Utworzono')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Zaktualizowano')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='wms.product', verbose_name='Produkt')),
            ],
            options={
                'verbose_name': 'Zdjęcie produktu',
                'verbose_name_plural': 'Zdjęcia produktów',
                'ordering': ['product', 'is_primary', 'order', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='ReceivingOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.CharField(max_length=50, unique=True)),
                ('status', models.CharField(choices=[('pending', 'Oczekujące'), ('in_progress', 'W trakcie'), ('completed', 'Zakończone'), ('cancelled', 'Anulowane')], default='pending', max_length=20)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('supplier_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='receiving_orders', to='wms.supplierorder')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ReceivingHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_received', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('scanned_at', models.DateTimeField(auto_now_add=True)),
                ('notes', models.CharField(blank=True, max_length=200)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wms.location')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wms.product')),
                ('scanned_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('receiving_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='history', to='wms.receivingorder')),
            ],
            options={
                'ordering': ['-scanned_at'],
            },
        ),
        migrations.CreateModel(
            name='SupplierOrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_ordered', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('quantity_received', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('notes', models.CharField(blank=True, max_length=200)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wms.product')),
                ('supplier_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='wms.supplierorder')),
            ],
            options={
                'unique_together': {('supplier_order', 'product')},
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to=wms.models.user_avatar_path, verbose_name='Avatar')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Telefon')),
                ('department', models.CharField(blank=True, max_length=100, verbose_name='Dział')),
                ('position', models.CharField(blank=True, max_length=100, verbose_name='Stanowisko')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Utworzono')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Zaktualizowano')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL, verbose_name='Użytkownik')),
            ],
            options={
                'verbose_name': 'Profil użytkownika',
                'verbose_name_plural': 'Profile użytkowników',
            },
        ),
        migrations.CreateModel(
            name='WarehouseDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_number', models.CharField(max_length=50, unique=True)),
                ('document_type', models.CharField(choices=[('PZ', 'Przyjęcie zewnętrzne'), ('WZ', 'Wydanie zewnętrzne'), ('MM', 'Przesunięcie międzymagazynowe')], max_length=2)),
                ('document_date', models.DateField(default=django.utils.timezone.now)),
                ('status', models.CharField(default='draft', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True)),
                ('customer_order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='wms.customerorder')),
                ('supplier_order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='wms.supplierorder')),
            ],
            options={
                'ordering': ['-document_date'],
            },
        ),
        migrations.CreateModel(
            name='ProductCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=200, unique=True, verbose_name='Kod')),
                ('code_type', models.CharField(choices=[('barcode', 'Kod kreskowy'), ('qr', 'Kod QR'), ('ean13', 'EAN-13'), ('ean8', 'EAN-8'), ('code128', 'Code 128'), ('code39', 'Code 39'), ('upc', 'UPC'), ('other', 'Inny')], default='barcode', max_length=20, verbose_name='Typ kodu')),
                ('description', models.CharField(blank=True, max_length=200, verbose_name='Opis')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktywny')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Utworzono')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Zaktualizowano')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='codes', to='wms.product', verbose_name='Produkt')),
            ],
            options={
                'verbose_name': 'Kod produktu',
                'verbose_name_plural': 'Kody produktów',
                'ordering': ['code_type', 'code'],
                'unique_together': {('product', 'code')},
            },
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Ilość')),
                ('reserved_quantity', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Ilość zarezerwowana')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wms.location', verbose_name='Lokalizacja')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wms.product', verbose_name='Produkt')),
            ],
            options={
                'verbose_name': 'Stan magazynowy',
                'verbose_name_plural': 'Stany magazynowe',
                'unique_together': {('product', 'location')},
            },
        ),
        migrations.CreateModel(
            name='ReceivingItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_ordered', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('quantity_received', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('sequence', models.PositiveIntegerField(default=1)),
                ('notes', models.CharField(blank=True, max_length=200)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='wms.location')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wms.product')),
                ('receiving_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='wms.receivingorder')),
                ('supplier_order_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wms.supplierorderitem')),
            ],
            options={
                'ordering': ['sequence'],
                'unique_together': {('receiving_order', 'supplier_order_item')},
            },
        ),
        migrations.CreateModel(
            name='DocumentItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wms.location')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wms.product')),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='wms.warehousedocument')),
            ],
            options={
                'unique_together': {('document', 'product', 'location')},
            },
        ),
    ]
