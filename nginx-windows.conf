# Windows-optimized nginx configuration
# This configuration is specifically optimized for Windows environments
# Use this file when running nginx directly on Windows (not in Docker)

events {
    worker_connections 1024;
    # Windows-specific: Use select for better compatibility
    use select;
}

http {
    # Windows-specific mime.types path
    include mime.types;
    default_type application/octet-stream;
    
    # Windows-specific optimizations
    sendfile off;  # Disable sendfile on Windows
    tcp_nopush off;  # Disable tcp_nopush on Windows
    tcp_nodelay on;  # Enable tcp_nodelay for better performance
    
    # Windows-specific worker process settings
    worker_processes 1;  # Use single worker on Windows for stability
    
    # Logging - Windows compatible paths
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    # Use relative paths for logs (will be created in nginx directory)
    access_log logs/access.log main;
    error_log logs/error.log;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=1r/s;

    # Upstream Django application
    upstream django {
        server 127.0.0.1:8000;  # Windows-specific: Use localhost instead of container name
    }

    # HTTP server
    server {
        listen 80;
        server_name localhost;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

        # Client max body size
        client_max_body_size 100M;

        # Static files - Windows path format
        location /static/ {
            alias ./static/;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Media files - Windows path format
        location /media/ {
            alias ./media/;
            expires 1y;
            add_header Cache-Control "public";
        }

        # API rate limiting
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://django;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Login rate limiting
        location /login/ {
            limit_req zone=login burst=5 nodelay;
            proxy_pass http://django;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Django application
        location / {
            proxy_pass http://django;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # Health check
        location /health/ {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }

    # HTTPS server (uncomment and configure for production)
    # server {
    #     listen 443 ssl http2;
    #     server_name your-domain.com;
    #
    #     ssl_certificate ssl/cert.pem;  # Windows path
    #     ssl_certificate_key ssl/key.pem;  # Windows path
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    #     ssl_prefer_server_ciphers off;
    #
    #     # Security headers
    #     add_header Strict-Transport-Security "max-age=63072000" always;
    #     add_header X-Frame-Options "SAMEORIGIN" always;
    #     add_header X-Content-Type-Options "nosniff" always;
    #     add_header X-XSS-Protection "1; mode=block" always;
    #     add_header Referrer-Policy "no-referrer-when-downgrade" always;
    #     add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    #
    #     # Same location blocks as HTTP server
    #     location /static/ {
    #         alias ./static/;
    #         expires 1y;
    #         add_header Cache-Control "public, immutable";
    #     }
    #
    #     location /media/ {
    #         alias ./media/;
    #         expires 1y;
    #         add_header Cache-Control "public";
    #     }
    #
    #     location / {
    #         proxy_pass http://django;
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Proto $scheme;
    #         proxy_redirect off;
    #     }
    # }
}
